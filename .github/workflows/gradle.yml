name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build Application
        run: |
          cd $GITHUB_WORKSPACE  # 워크플로우 실행 환경의 루트 디렉토리로 이동
          ./gradlew build
          ls -R
          
      - name: Copy file via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "$GITHUB_WORKSPACE/build/libs/pro-0.0.1-SNAPSHOT.jar"
          target: /art_see_real/backend/server
          
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} # EC2 인스턴스에 연결하기 위한 개인 키
          host: ${{ secrets.HOST }} # EC2 인스턴스 IP
          username: ${{ secrets.USER }} # EC2 인스턴스 사용자 이름
          script: |
            cd /art_see_real/backend/server  # 실제 애플리케이션이 배포될 디렉토리로 이동
            # 기존 프로세스 종료 (8080 포트 사용 중인 경우)
            EXISTING_PID=$(sudo lsof -t -i:8080)
            if [ -n "$EXISTING_PID" ]; then
              echo "Existing process found. Stopping..."
              kill -15 "$EXISTING_PID"  # 정상적으로 종료
              sleep 5  # 일정 시간 대기 (종료 확인을 위해)
              kill -0 "$EXISTING_PID" && kill -9 "$EXISTING_PID"  # 만약 종료되지 않았다면 강제 종료
            fi
            # 새로운 애플리케이션 시작
            nohup java -jar pro-0.0.1-SNAPSHOT.jar &
